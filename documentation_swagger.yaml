swagger: '2.0'
info:
  description: Data Proxy to Copernicus Climate Data Store API (cdsapi)
  version: 1.0.0
  title: Copernicus Data Proxy API
  contact:
    name: Team "6" (Wojciech Fabjańczuk, Wiktor Michalski, Konrad Opaliński)
    email: wojciechfabjanczuk@gmail.com

  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html

# tags are used for organizing operations
tags:
- name: TaskList
  description: Displaying all Copernicus requests (Tasks) and adding new task to the list
- name: Task
  description: Displaying all information about existing single Copernicus request (Task) and deleting specified Copernicus request
- name: File
  description: Downloading files
- name: DataSetList
  description: Displaying all data sets and creating new one
- name: DataSet
  description: Displaying, editing or deleting single data set

paths:
  /task:
    get:
      tags:
      - TaskList
      summary: Displaying all Copernicus requests (Tasks)
      produces:
      - application/json
      responses:
        200:
          description: List of Copernicus requests received by the API (possibly empty [])
          schema:
            type: array
            items:
              $ref: '#/definitions/Task'
    post:
      tags:
      - TaskList
      summary: Adds new Copernicus request (Task)
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: JsonContent
        description: Copernicus request (Task) data to add it to the list
        schema:
          $ref: '#/definitions/TaskJsonContent'
      responses:
        200:
          description: Copernicus request (Task) created
          schema:
            type: object
            properties:
              task_id:
                type: integer
                example: 2
        400:
          description: ValidationError
  /task/{url_id}:
    parameters:
      - in: path
        name: url_id
        type: integer
        required: true
        description: Numeric ID of the Copernicus request to get
    get:
      tags:
      - Task
      summary: Displaying all information about single Copernicus request (Task) indicated by url_id
      produces:
      - application/json
      responses:
        200:
          description: Information about task
          schema:
            $ref: '#/definitions/Task'
        404:
          description: Copernicus request with url_id not found
    delete:
      tags:
      - Task
      summary: Softly deleting Copernicus request (Task) indicated by url_id
      description: If task is being downloaded in the moment of the deletion, it will be finished unless workers are restarted.
      produces:
      - application/json
      responses:
        200:
          description: Copernicus request with url_id deleted
        404:
          description: Copernicus request with url_id not found
  /file/{url_id}:
    parameters:
      - in: path
        name: url_id
        type: integer
        required: true
        description: Numeric ID of the downloaded file (same as its Copernicus request) to get
    get:
      tags:
      - File
      summary: Sends downloaded files
      produces:
      - application/octet-stream
      responses:
        200:
          description: Downloaded file sent
        404:
          description: File not found
  /dataset:
    get:
      tags:
      - DataSetList
      summary: Displaying all Data Set configurations
      description: DataSetAttributeList properties can have values "all", "at_least_one" or "one". Note that string "all" validates TaskJsonContent option value equal to "all", not ANY value!
      produces:
      - application/json
      responses:
        200:
          description: List of Copernicus Data Set configurations (possibly empty [])
          schema:
            type: array
            items:
              $ref: '#/definitions/DataSet'
    post:
      tags:
      - DataSetList
      summary: Adds new Copernicus Data Set configuration
      description: DataSetAttributeList properties can have values "all", "at_least_one" or "one". Note that string "all" validates TaskJsonContent option value equal to "all", not ANY value!
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: DataSetJson
        description: Copernicus Data Set configuration data to add it to the list
        schema:
          $ref: '#/definitions/DataSetJson'
      responses:
        200:
          description: Copernicus Data Set configuration created
          schema:
            type: object
            properties:
              data_set_id:
                type: integer
                example: 2
        400:
          description: ValidationError
  /dataset/{url_id}:
    parameters:
      - in: path
        name: url_id
        type: integer
        required: true
        description: Numeric ID of the Copernicus Data Set configuration
    get:
      tags:
      - DataSet
      summary: Displaying all information about single Copernicus Data Set configuration indicated by url_id
      description: DataSetAttributeList properties can have values "all", "at_least_one" or "one". Note that string "all" validates TaskJsonContent option value equal to "all", not ANY value!
      produces:
      - application/json
      responses:
        200:
          description: Information about Copernicus Data Set configuration indicated by url_id
          schema:
              $ref: '#/definitions/DataSet'
        404:
          description: Copernicus Data Set configuration indicated by url_id does not found
    put:
      tags:
      - DataSet
      summary: Edit Copernicus Data Set configuration indicated by url_id
      description: DataSetAttributeList properties can have values "all", "at_least_one" or "one". Note that string "all" validates TaskJsonContent option value equal to "all", not ANY value!
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: DataSetJson
        description: Copernicus Data Set configuration data to replace old one indicated by url_id
        schema:
          $ref: '#/definitions/DataSetJson'
      responses:
        200:
          description: Copernicus Data Set configuration replaced
        400:
          description: ValidationError
        404:
          description: Copernicus Data Set configuration indicated by url_id does not found
    delete:
      tags:
      - DataSet
      summary: Deleting Copernicus Data Set configuration indicated by url_id
      produces:
      - application/json
      responses:
        200:
          description: Copernicus Data Set configuration indicated by url_id deleted
        404:
          description: Copernicus Data Set configuration indicated by url_id not found
definitions:
  TaskJsonContent:
    type: object
    properties:
      data_set:
        type: string
        example: reanalysis-era5-single-levels
      options:
        type: object
        properties:
          product_type:
            type: array
            items:
              type: string
              example: "ensemble_mean"
          variable:
            type: array
            items:
              type: string
              example: "large_scale_snowfall"
          year:
            type: array
            items:
              type: string
              example: "2000"
          month:
            type: array
            items:
              type: string
              example: "04"
          day:
            type: array
            items:
              type: string
              example: "07"
          time:
            type: array
            items:
              type: string
              example: "07"
          format:
            type: string
            example: "grib"
  Task:
    type: object
    required:
    - id
    - data_set
    - json_content
    - status
    - task_date
    - msg
    - bytes
    properties:
      id:
        type: integer
        example: 2
      data_set:
        type: string
        example: reanalysis-era5-single-levels
      json_content:
        $ref: '#/definitions/TaskJsonContent'
      status:
        type: string
        example: "being downloaded"
      task_date:
        type: string
        format: "%Y-%m-%d %H:%M:%S"
        example: "2019-06-13 18:56:13"
      msg:
        type: string
        example: ""
      bytes:
        type: integer
        example: 0
  DataSet:
    type: object
    description: DataSetAttributeList properties can have values "all", "at_least_one" or "one". Note that string "all" validates TaskJsonContent option value equal to "all", not ANY value!
    required:
    - id
    - data_set
    - attributes
    properties:
      id:
        type: integer
        example: 2
      data_set:
        type: string
        example: reanalysis-era5-single-levels
      attributes:
        $ref: '#/definitions/DataSetAttributeList'
  DataSetJson:
    type: object
    description: DataSetAttributeList properties can have values "all", "at_least_one" or "one". Note that string "all" validates TaskJsonContent option value equal to "all", not ANY value!
    required:
    - data_set
    - attributes
    properties:
      data_set:
        type: string
        example: reanalysis-era5-single-levels
      attributes:
        $ref: '#/definitions/DataSetAttributeList'
  DataSetAttributeList:
    type: object
    description: DataSetAttributeList properties can have values "all", "at_least_one" or "one". Note that string "all" validates TaskJsonContent option value equal to "all", not ANY value!
    required:
    - id
    - data_set
    - attributes
    properties:
      product_type:
        type: string
        example: "at_least_one"
      format:
        type: string
        example: "one"
      variable:
        type: string
        example: "at_least_one"
      day:
        type: string
        example: "at_least_one"
      month:
        type: string
        example: "at_least_one"
      year:
        type: string
        example: "at_least_one"
      time:
        type: string
        example: "at_least_one"

# Added by API Auto Mocking Plugin
host: virtserver.swaggerhub.com
basePath: /wfabjanczuk/copernicus_proxy/1.0.0
schemes:
 - https